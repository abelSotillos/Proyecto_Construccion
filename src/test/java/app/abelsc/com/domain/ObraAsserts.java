package app.abelsc.com.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ObraAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObraAllPropertiesEquals(Obra expected, Obra actual) {
        assertObraAutoGeneratedPropertiesEquals(expected, actual);
        assertObraAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObraAllUpdatablePropertiesEquals(Obra expected, Obra actual) {
        assertObraUpdatableFieldsEquals(expected, actual);
        assertObraUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObraAutoGeneratedPropertiesEquals(Obra expected, Obra actual) {
        assertThat(expected)
            .as("Verify Obra auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObraUpdatableFieldsEquals(Obra expected, Obra actual) {
        assertThat(expected)
            .as("Verify Obra relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getDireccion()).as("check direccion").isEqualTo(actual.getDireccion()))
            .satisfies(e -> assertThat(e.getFechaInicio()).as("check fechaInicio").isEqualTo(actual.getFechaInicio()))
            .satisfies(e -> assertThat(e.getFechaFin()).as("check fechaFin").isEqualTo(actual.getFechaFin()))
            .satisfies(e -> assertThat(e.getCoste()).as("check coste").isEqualTo(actual.getCoste()))
            .satisfies(e -> assertThat(e.getEstado()).as("check estado").isEqualTo(actual.getEstado()))
            .satisfies(e -> assertThat(e.getCostePagado()).as("check costePagado").isEqualTo(actual.getCostePagado()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertObraUpdatableRelationshipsEquals(Obra expected, Obra actual) {
        assertThat(expected)
            .as("Verify Obra relationships")
            .satisfies(e -> assertThat(e.getEmpresa()).as("check empresa").isEqualTo(actual.getEmpresa()))
            .satisfies(e -> assertThat(e.getCliente()).as("check cliente").isEqualTo(actual.getCliente()));
    }
}
