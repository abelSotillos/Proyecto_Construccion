package app.abelsc.com.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class EmpresaAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaAllPropertiesEquals(Empresa expected, Empresa actual) {
        assertEmpresaAutoGeneratedPropertiesEquals(expected, actual);
        assertEmpresaAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaAllUpdatablePropertiesEquals(Empresa expected, Empresa actual) {
        assertEmpresaUpdatableFieldsEquals(expected, actual);
        assertEmpresaUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaAutoGeneratedPropertiesEquals(Empresa expected, Empresa actual) {
        assertThat(expected)
            .as("Verify Empresa auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaUpdatableFieldsEquals(Empresa expected, Empresa actual) {
        assertThat(expected)
            .as("Verify Empresa relevant properties")
            .satisfies(e -> assertThat(e.getNombre()).as("check nombre").isEqualTo(actual.getNombre()))
            .satisfies(e -> assertThat(e.getNif()).as("check nif").isEqualTo(actual.getNif()))
            .satisfies(e -> assertThat(e.getCalle()).as("check calle").isEqualTo(actual.getCalle()))
            .satisfies(e -> assertThat(e.getTelefono()).as("check telefono").isEqualTo(actual.getTelefono()))
            .satisfies(e -> assertThat(e.getProvincia()).as("check provincia").isEqualTo(actual.getProvincia()))
            .satisfies(e -> assertThat(e.getPoblacion()).as("check poblacion").isEqualTo(actual.getPoblacion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertEmpresaUpdatableRelationshipsEquals(Empresa expected, Empresa actual) {
        // empty method
    }
}
